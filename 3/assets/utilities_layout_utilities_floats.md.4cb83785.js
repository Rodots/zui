import{_ as r}from"./chunks/favicon.cc7c7df5.js";import{r as d,o as p,c as o,a as l,w as n,b as s,d as u,g as e,F as _,e as D,t as c}from"./app.ee233add.js";const h=s("h1",{id:"浮动",tabindex:"-1"},[u("浮动 "),s("a",{class:"header-anchor",href:"#浮动","aria-hidden":"true"},"#")],-1),y=s("p",null,"用于设置元素浮动或清除浮动影响的工具类。",-1),m={class:"table"},g=s("thead",null,[s("tr",null,[s("th",null,"工具类"),s("th",null,"属性")])],-1),C=e('<div class="tip custom-block"><p class="custom-block-title">提示</p><p>浮动应当仅适用于实现文字环绕效果，布局请使用 <code>flex</code> 等工具类。</p></div><h2 id="效果展示" tabindex="-1">效果展示 <a class="header-anchor" href="#效果展示" aria-hidden="true">#</a></h2><h3 id="向右浮动" tabindex="-1">向右浮动 <a class="header-anchor" href="#向右浮动" aria-hidden="true">#</a></h3><p>使用工具类 <code>pull-right</code> 将一个元素浮动到其容器的右边。</p>',4),b=s("div",{class:"clearfix"},[s("img",{class:"pull-right ml-4 h-24",src:r}),s("p",null,"ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。")],-1),f=e(`<div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;clearfix&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">img</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;pull-right ml-2 h-24&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">src</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;/favicon.svg&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="向左浮动" tabindex="-1">向左浮动 <a class="header-anchor" href="#向左浮动" aria-hidden="true">#</a></h3><p>使用工具类 <code>pull-left</code> 将一个元素浮动到其容器的左边。</p>`,3),v=s("div",{class:"clearfix"},[s("img",{class:"pull-left mr-4 h-24",src:r}),s("p",null,"ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。")],-1),E=e(`<div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;clearfix&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">img</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;pull-left mr-4 h-24&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">src</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;/favicon.svg&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,1),Z=JSON.parse('{"title":"浮动","description":"","frontmatter":{},"headers":[{"level":2,"title":"效果展示","slug":"效果展示","link":"#效果展示","children":[{"level":3,"title":"向右浮动","slug":"向右浮动","link":"#向右浮动","children":[]},{"level":3,"title":"向左浮动","slug":"向左浮动","link":"#向左浮动","children":[]}]}],"relativePath":"utilities/layout/utilities/floats.md","lastUpdated":null}'),F={name:"utilities/layout/utilities/floats.md"},A=Object.assign(F,{setup(I){const i=[{name:"pull-right",desc:"float: right;"},{name:"pull-left",desc:"float: left;"},{name:"clearfix",desc:'.clearfix::after {content: ""; display: block; clear: both;}'}];return(k,U)=>{const a=d("Example");return p(),o("div",null,[h,y,l(a,{class:"p-0"},{default:n(()=>[s("table",m,[g,s("tbody",null,[(p(),o(_,null,D(i,t=>s("tr",null,[s("td",null,c(t.name),1),s("td",null,[s("code",null,c(t.desc),1)])])),64))])])]),_:1}),C,l(a,{background:"light-grid"},{default:n(()=>[b]),_:1}),f,l(a,{background:"light-grid"},{default:n(()=>[v]),_:1}),E])}}});export{Z as __pageData,A as default};
