import{r as i,o as s,c as t,d as c,w as r,g as p,a,F as d,e as u,t as n}from"./app.bdadd8d5.js";const h=p(`<h1 id="容器" tabindex="-1">容器 <a class="header-anchor" href="#容器" aria-hidden="true">#</a></h1><p><code>container</code> 类设置一个元素的 <code>max-width</code> 来匹配当前断点的 <code>min-width</code>。如果您想为一组固定的屏幕尺寸设计，而不是试图适应一个完全流动的视窗，这很有用。</p><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-hidden="true">#</a></h2><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;container&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">&lt;!-- ... --&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>请注意，容器不会自动居中，也没有任何内置的水平方向的内边距。</p></div><h2 id="默认类参考" tabindex="-1">默认类参考 <a class="header-anchor" href="#默认类参考" aria-hidden="true">#</a></h2>`,6),m={class:"table"},_=a("thead",null,[a("tr",null,[a("th",null,"修饰类"),a("th",null,"断点"),a("th",null,"定义")])],-1),g=JSON.parse('{"title":"容器","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":2,"title":"默认类参考","slug":"默认类参考","link":"#默认类参考","children":[]}],"relativePath":"utilities/layout/utilities/container.md","lastUpdated":null}'),b={name:"utilities/layout/utilities/container.md"},C=Object.assign(b,{setup(x){const l=[{name:"container",desc:"width: 100%;",breakpoint:"无"},{name:"container",desc:"max-width: 640px;",breakpoint:"sm (640px)"},{name:"container",desc:"max-width: 768px;",breakpoint:"sm (768px)"},{name:"container",desc:"max-width: 1024px;",breakpoint:"sm (1024px)"},{name:"container",desc:"max-width: 1280px;",breakpoint:"sm (1280px)"},{name:"container",desc:"max-width: 1536px;",breakpoint:"sm (1536px)"}];return(y,D)=>{const o=i("Example");return s(),t("div",null,[h,c(o,null,{default:r(()=>[a("table",m,[_,a("tbody",null,[(s(),t(d,null,u(l,e=>a("tr",null,[a("td",null,n(e.name),1),a("td",null,n(e.breakpoint),1),a("td",null,n(e.desc),1)])),64))])])]),_:1})])}}});export{g as __pageData,C as default};
