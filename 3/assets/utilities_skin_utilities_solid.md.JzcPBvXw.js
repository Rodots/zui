import{D as c,o as e,c as t,I as i,w as p,k as s,a as n,R as u,F as d,E as m,b as y,M as _}from"./chunks/framework.U5b_PKOd.js";const E=s("h1",{id:"实心",tabindex:"-1"},[n("实心 "),s("a",{class:"header-anchor",href:"#实心","aria-label":'Permalink to "实心"'},"​")],-1),g=s("p",null,"用于快速为元素或组件实现特定颜色的实心填充外观，包含语义化和灰度工具类。",-1),h=s("h2",{id:"效果",tabindex:"-1"},[n("效果 "),s("a",{class:"header-anchor",href:"#效果","aria-label":'Permalink to "效果"'},"​")],-1),b=s("div",{class:"mb-3"},[s("strong",null,"语义化")],-1),f={class:"row flex-wrap gap-4"},k=s("div",{class:"mt-6 mb-3"},[s("strong",null,"灰度")],-1),v={class:"row flex-wrap gap-4"},x=s("h2",{id:"示例",tabindex:"-1"},[n("示例 "),s("a",{class:"header-anchor",href:"#示例","aria-label":'Permalink to "示例"'},"​")],-1),B=s("button",{class:"btn primary"},"Primary Button",-1),C=s("span",{class:"label success"},"Success Label",-1),F=s("div",{class:"gray-200 p-2"},"Gray Element",-1),P=u(`<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;btn primary&quot;</span><span style="color:#E1E4E8;">&gt;Primary Button&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">span</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;label success&quot;</span><span style="color:#E1E4E8;">&gt;Success Label&lt;/</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;gray-200&quot;</span><span style="color:#E1E4E8;">&gt;Gray-200 Element&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div>`,1),N=JSON.parse('{"title":"实心","description":"","frontmatter":{},"headers":[],"relativePath":"utilities/skin/utilities/solid.md","filePath":"utilities/skin/utilities/solid.md","lastUpdated":null}'),w={name:"utilities/skin/utilities/solid.md"},V=Object.assign(w,{setup(D){const l={semantic:[{name:"primary"},{name:"secondary"},{name:"success"},{name:"warning"},{name:"danger"},{name:"important"},{name:"special"}],gray:[{name:"gray-50"},{name:"gray-100"},{name:"gray-200"},{name:"gray-300"},{name:"gray-400"},{name:"gray-500",hint:!0,alias:"gray",title:"gray"},{name:"gray-600"},{name:"gray-700"},{name:"gray-800"},{name:"gray-900"},{name:"gray-950"}]};return(S,T)=>{const o=c("StyleTile"),r=c("Example");return e(),t("div",null,[E,g,h,i(r,null,{default:p(()=>[b,s("div",f,[(e(!0),t(d,null,m(l.semantic,a=>(e(),y(o,_({key:a.name,tileClass:"rounded h-8 w-20 text-sm font-mono",title:!0},{...a}),null,16))),128))]),k,s("div",v,[(e(!0),t(d,null,m(l.gray,a=>(e(),y(o,_({key:a.name,tileClass:"rounded h-8 w-20 text-sm font-mono",title:!0},a),null,16))),128))])]),_:1}),x,i(r,{class:"col items-start gap-2"},{default:p(()=>[B,C,F]),_:1}),P])}}});export{N as __pageData,V as default};
