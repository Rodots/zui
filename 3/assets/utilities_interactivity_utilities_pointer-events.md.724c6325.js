import{r as p,o,c,a as n,w as a,b as e,d as s,g as r,F as u,e as _,t as i}from"./app.949f02e7.js";const h=e("h1",{id:"指向事件",tabindex:"-1"},[s("指向事件 "),e("a",{class:"header-anchor",href:"#指向事件","aria-hidden":"true"},"#")],-1),b=e("p",null,"用于控制元素是否响应指向事件的工具类。",-1),v={class:"table"},m=e("thead",null,[e("tr",null,[e("th",null,"工具类"),e("th",null,"属性")])],-1),y=e("h2",{id:"效果展示",tabindex:"-1"},[s("效果展示 "),e("a",{class:"header-anchor",href:"#效果展示","aria-hidden":"true"},"#")],-1),D=e("h3",{id:"隐蔽事件",tabindex:"-1"},[s("隐蔽事件 "),e("a",{class:"header-anchor",href:"#隐蔽事件","aria-hidden":"true"},"#")],-1),C=e("p",null,[s("使用 "),e("code",null,"events-none"),s(" 使元素忽略指向事件。指向事件仍然会在子元素上触发，并传递到目标元素的下方。")],-1),g=e("button",{class:"btn events-none"},"隐蔽事件",-1),E=r(`<div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;btn events-none&quot;</span><span style="color:#C9D1D9;">&gt;隐蔽事件&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="开启事件" tabindex="-1">开启事件 <a class="header-anchor" href="#开启事件" aria-hidden="true">#</a></h3><p>使用 <code>events-auto</code> 来恢复浏览器对指向事件（如 <code>:hover</code> 和 <code>click</code> ）的默认行为。</p>`,3),T=e("button",{class:"btn events-auto"},"开启事件",-1),f=r(`<div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;btn events-auto&quot;</span><span style="color:#C9D1D9;">&gt;开启事件&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),V=JSON.parse('{"title":"指向事件","description":"","frontmatter":{},"headers":[{"level":2,"title":"效果展示","slug":"效果展示","link":"#效果展示","children":[{"level":3,"title":"隐蔽事件","slug":"隐蔽事件","link":"#隐蔽事件","children":[]},{"level":3,"title":"开启事件","slug":"开启事件","link":"#开启事件","children":[]}]}],"relativePath":"utilities/interactivity/utilities/pointer-events.md","lastUpdated":null}'),k={name:"utilities/interactivity/utilities/pointer-events.md"},N=Object.assign(k,{setup(x){const d=[{name:"events-none",desc:"pointer-events: none;"},{name:"events-auto",desc:"pointer-events: auto;"}];return(F,S)=>{const t=p("Example");return o(),c("div",null,[h,b,n(t,{class:"p-0"},{default:a(()=>[e("table",v,[m,e("tbody",null,[(o(),c(u,null,_(d,l=>e("tr",null,[e("td",null,i(l.name),1),e("td",null,[e("code",null,i(l.desc),1)])])),64))])])]),_:1}),y,D,C,n(t,null,{default:a(()=>[g]),_:1}),E,n(t,null,{default:a(()=>[T]),_:1}),f])}}});export{V as __pageData,N as default};
