import{H as d,o as l,c,J as a,E as n,C as t,a as e,V as r,F as _,R as u,t as i}from"./chunks/framework.d553856c.js";const h=t("h1",{id:"指向事件",tabindex:"-1"},[e("指向事件 "),t("a",{class:"header-anchor",href:"#指向事件","aria-label":'Permalink to "指向事件"'},"​")],-1),E=t("p",null,"用于控制元素是否响应指向事件的工具类。",-1),b={class:"table"},y=t("thead",null,[t("tr",null,[t("th",null,"工具类"),t("th",null,"属性")])],-1),v=t("h2",{id:"效果展示",tabindex:"-1"},[e("效果展示 "),t("a",{class:"header-anchor",href:"#效果展示","aria-label":'Permalink to "效果展示"'},"​")],-1),m=t("h3",{id:"隐蔽事件",tabindex:"-1"},[e("隐蔽事件 "),t("a",{class:"header-anchor",href:"#隐蔽事件","aria-label":'Permalink to "隐蔽事件"'},"​")],-1),g=t("p",null,[e("使用 "),t("code",null,"events-none"),e(" 使元素忽略指向事件。指向事件仍然会在子元素上触发，并传递到目标元素的下方。")],-1),f=t("button",{class:"btn events-none"},"隐蔽事件",-1),C=r('<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;btn events-none&quot;</span><span style="color:#E1E4E8;">&gt;隐蔽事件&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="开启事件" tabindex="-1">开启事件 <a class="header-anchor" href="#开启事件" aria-label="Permalink to &quot;开启事件&quot;">​</a></h3><p>使用 <code>events-auto</code> 来恢复浏览器对指向事件（如 <code>:hover</code> 和 <code>click</code> ）的默认行为。</p>',3),T=t("button",{class:"btn events-auto"},"开启事件",-1),k=r('<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;btn events-auto&quot;</span><span style="color:#E1E4E8;">&gt;开启事件&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div>',1),F=JSON.parse('{"title":"指向事件","description":"","frontmatter":{},"headers":[],"relativePath":"utilities/interactivity/utilities/pointer-events.md","filePath":"utilities/interactivity/utilities/pointer-events.md","lastUpdated":null}'),x={name:"utilities/interactivity/utilities/pointer-events.md"},B=Object.assign(x,{setup(P){const p=[{name:"events-none",desc:"pointer-events: none;"},{name:"events-auto",desc:"pointer-events: auto;"}];return(S,V)=>{const s=d("Example");return l(),c("div",null,[h,E,a(s,{class:"p-0"},{default:n(()=>[t("table",b,[y,t("tbody",null,[(l(),c(_,null,u(p,o=>t("tr",null,[t("td",null,i(o.name),1),t("td",null,[t("code",null,i(o.desc),1)])])),64))])])]),_:1}),v,m,g,a(s,null,{default:n(()=>[f]),_:1}),C,a(s,null,{default:n(()=>[T]),_:1}),k])}}});export{F as __pageData,B as default};
