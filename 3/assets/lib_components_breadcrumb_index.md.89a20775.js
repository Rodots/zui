import{_ as l,H as e,o,c as n,J as r,E as p,C as s,a,V as c}from"./chunks/framework.a3326316.js";const D=JSON.parse('{"title":"面包屑","description":"","frontmatter":{},"headers":[],"relativePath":"lib/components/breadcrumb/index.md","filePath":"lib/components/breadcrumb/index.md","lastUpdated":null}'),E={name:"lib/components/breadcrumb/index.md"},d=s("h1",{id:"面包屑",tabindex:"-1"},[a("面包屑 "),s("a",{class:"header-anchor",href:"#面包屑","aria-label":'Permalink to "面包屑"'},"​")],-1),i=s("h2",{id:"使用方法",tabindex:"-1"},[a("使用方法 "),s("a",{class:"header-anchor",href:"#使用方法","aria-label":'Permalink to "使用方法"'},"​")],-1),y=s("p",null,[a("使用类 "),s("code",null,".breadcrumb"),a(" 来实现面包屑，通常搭配 "),s("code",null,"<ol>"),a("、"),s("code",null,"<li>"),a(" 元素使用。")],-1),h=s("ol",{class:"breadcrumb"},[s("li",null,[s("a",{href:"your/url/"},"首页")]),s("li",null,[s("a",{href:"your/url/"},"图书馆")]),s("li",{class:"active"},"数据")],-1),u=c(`<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">ol</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;breadcrumb&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">href</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;your/url/&quot;</span><span style="color:#E1E4E8;">&gt;首页&lt;/</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">href</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;your/url/&quot;</span><span style="color:#E1E4E8;">&gt;图书馆&lt;/</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;active&quot;</span><span style="color:#E1E4E8;">&gt;数据&lt;/</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">ol</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="css-类" tabindex="-1">CSS 类 <a class="header-anchor" href="#css-类" aria-label="Permalink to &quot;CSS 类&quot;">​</a></h2><p>面包屑提供了如下CSS类</p><table><thead><tr><th>类</th><th style="text-align:center;">类型</th><th>作用</th></tr></thead><tbody><tr><td><code>breadcrumb</code></td><td style="text-align:center;">实体类</td><td>元素作为面包屑组件</td></tr></tbody></table><h2 id="css-变量" tabindex="-1">CSS 变量 <a class="header-anchor" href="#css-变量" aria-label="Permalink to &quot;CSS 变量&quot;">​</a></h2><table><thead><tr><th>变量名称</th><th>变量含义</th></tr></thead><tbody><tr><td>--breadcrumb-divider</td><td>面包屑分割元素标签类型</td></tr><tr><td>--breadcrumb-divider-color</td><td>面包屑分割元素颜色</td></tr><tr><td>--breadcrumb-color-active</td><td>面包屑选中态元素颜色</td></tr></tbody></table>`,6);function b(_,m,g,f,x,C){const t=e("Example");return o(),n("div",null,[d,i,y,r(t,null,{default:p(()=>[h]),_:1}),u])}const q=l(E,[["render",b]]);export{D as __pageData,q as default};
