import{C as r,o as e,c as l,H as n,w as i,k as s,a as o,Q as d,F as E,D as u,t as c}from"./chunks/framework.723e1065.js";const y=s("h1",{id:"字体",tabindex:"-1"},[o("字体 "),s("a",{class:"header-anchor",href:"#字体","aria-label":'Permalink to "字体"'},"​")],-1),_=s("p",null,"控制元素字体的工具类。",-1),m={class:"table"},f=s("thead",null,[s("tr",null,[s("th",{class:"w-20"},"工具类"),s("th",null,"属性")])],-1),h=s("h2",{id:"效果展示",tabindex:"-1"},[o("效果展示 "),s("a",{class:"header-anchor",href:"#效果展示","aria-label":'Permalink to "效果展示"'},"​")],-1),g=s("p",null,[s("code",null,"sans"),o(" 是网络安全的无衬线字体；"),s("code",null,"serif"),o(" 是网络安全的衬线字体；"),s("code",null,"mono"),o(" 是网络安全的等宽字体。")],-1),b=s("div",{class:"text-lg font-sans"},"sans 字体",-1),v=s("div",{class:"text-lg font-serif"},"serif 字体",-1),C=s("div",{class:"text-lg font-mono"},"mono 字体",-1),F=d(`<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;font-sans&quot;</span><span style="color:#E1E4E8;">&gt;sans 字体&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;font-serif&quot;</span><span style="color:#E1E4E8;">&gt;serif 字体&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;font-mono&quot;</span><span style="color:#E1E4E8;">&gt;mono 字体&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div>`,1),k=JSON.parse('{"title":"字体","description":"","frontmatter":{},"headers":[],"relativePath":"utilities/typography/utilities/font-family.md","filePath":"utilities/typography/utilities/font-family.md","lastUpdated":null}'),S={name:"utilities/typography/utilities/font-family.md"},T=Object.assign(S,{setup(x){const p=[{name:"sans",desc:'font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";'},{name:"serif",desc:'font-family: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;'},{name:"mono",desc:'font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;'}];return(N,B)=>{const a=r("Example");return e(),l("div",null,[y,_,n(a,{class:"p-0"},{default:i(()=>[s("table",m,[f,s("tbody",null,[(e(),l(E,null,u(p,t=>s("tr",null,[s("td",null,c(t.name),1),s("td",null,[s("code",null,c(t.desc),1)])])),64))])])]),_:1}),h,g,n(a,{background:"light-circle"},{default:i(()=>[b,v,C]),_:1}),F])}}});export{k as __pageData,T as default};
