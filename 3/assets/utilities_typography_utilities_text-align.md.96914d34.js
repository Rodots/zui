import{r as i,o as a,c as l,a as n,w as o,g as c,b as s,F as d,e as _,t as p}from"./app.764e565b.js";const u=c('<h1 id="文本对齐" tabindex="-1">文本对齐 <a class="header-anchor" href="#文本对齐" aria-hidden="true">#</a></h1><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-hidden="true">#</a></h2><p>使用 <code>text-left</code>、<code>text-center</code>、<code>text-right</code> 和 <code>text-justify</code> 工具类来控制元素的文本对齐方式。</p>',3),y=s("p",{class:"text-left"},"文本左对齐",-1),h=s("p",{class:"text-center"},"文本居中对齐",-1),D=s("p",{class:"text-right"},"文本右对齐",-1),g=s("p",{class:"text-justify"},"文本两端对齐",-1),C=c(`<div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;text-left&quot;</span><span style="color:#C9D1D9;">&gt;文本左对齐&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;text-center&quot;</span><span style="color:#C9D1D9;">&gt;文本居中对齐&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;text-right&quot;</span><span style="color:#C9D1D9;">&gt;文本右对齐&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">class</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;text-justify&quot;</span><span style="color:#C9D1D9;">&gt;文本两端对齐&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="默认类参考" tabindex="-1">默认类参考 <a class="header-anchor" href="#默认类参考" aria-hidden="true">#</a></h2>`,2),x={class:"table"},m=s("thead",null,[s("tr",null,[s("th",null,"修饰类"),s("th",null,"定义")])],-1),A=JSON.parse('{"title":"文本对齐","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":2,"title":"默认类参考","slug":"默认类参考","link":"#默认类参考","children":[]}],"relativePath":"utilities/typography/utilities/text-align.md","lastUpdated":null}'),b={name:"utilities/typography/utilities/text-align.md"},v=Object.assign(b,{setup(E){const r=[{name:"text-left",desc:"text-align: left;"},{name:"text-center",desc:"text-align: center;"},{name:"text-right",desc:"text-align: right;"},{name:"text-justify",desc:"text-align: justify;"}];return(f,F)=>{const t=i("Example");return a(),l("div",null,[u,n(t,{class:"leading-7",background:"light-circle"},{default:o(()=>[y,h,D,g]),_:1}),C,n(t,null,{default:o(()=>[s("table",x,[m,s("tbody",null,[(a(),l(d,null,_(r,e=>s("tr",null,[s("td",null,p(e.name),1),s("td",null,p(e.desc),1)])),64))])])]),_:1})])}}});export{A as __pageData,v as default};
