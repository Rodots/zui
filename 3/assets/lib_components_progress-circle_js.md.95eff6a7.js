import{_ as l,H as e,o,c as n,J as r,E as p,V as s,C as c}from"./chunks/framework.1026cf52.js";const t={mounted(){onZUIReady(()=>{new zui.ProgressCircle("#progress1",{percent:40})})}},_=JSON.parse('{"title":"环形进度条生成器","description":"","frontmatter":{},"headers":[],"relativePath":"lib/components/progress-circle/js.md","lastUpdated":null}'),i=s('<h1 id="环形进度条生成器" tabindex="-1">环形进度条生成器 <a class="header-anchor" href="#环形进度条生成器" aria-label="Permalink to &quot;环形进度条生成器&quot;">​</a></h1><p>环形进度条生成器允许通过 JS 动态创建一个<a href="/zui/3/lib/components/progress-circle/index.html">环形进度条</a>。</p><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><p>通过构建一个 <code>ProgressCircle</code> 实例, 在一个空的 <code>&lt;div&gt;</code> 元素上创建一个菜单。</p>',4),E=c("div",{id:"progress1"},null,-1),d=s(`<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;progress1&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">progressCircle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> zui.</span><span style="color:#B392F0;">ProgressCircle</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#progress1&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">       percent: </span><span style="color:#79B8FF;">40</span></span>
<span class="line"><span style="color:#E1E4E8;">   });</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h2><h3 id="通过-npm" tabindex="-1">通过 npm <a class="header-anchor" href="#通过-npm" aria-label="Permalink to &quot;通过 npm&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {ProgressCircle} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;zui/progress-circle&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ProgressCircle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ProgressCircle</span><span style="color:#E1E4E8;">(element, options);</span></span></code></pre></div><h3 id="通过全局对象-zui" tabindex="-1">通过全局对象 <code>zui</code> <a class="header-anchor" href="#通过全局对象-zui" aria-label="Permalink to &quot;通过全局对象 \`zui\`&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">progressCircle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> zui.</span><span style="color:#B392F0;">ProgressCircle</span><span style="color:#E1E4E8;">(element, options);</span></span></code></pre></div><h3 id="使用-react-组件" tabindex="-1">使用 React 组件 <a class="header-anchor" href="#使用-react-组件" aria-label="Permalink to &quot;使用 React 组件&quot;">​</a></h3><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {render} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {ProgressCircle} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;zui/progress-circle/react&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(element, &lt;</span><span style="color:#79B8FF;">Menu</span><span style="color:#E1E4E8;"> {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">options} /&gt;);</span></span></code></pre></div><h3 id="使用-jquery-扩展" tabindex="-1">使用 jQuery 扩展 <a class="header-anchor" href="#使用-jquery-扩展" aria-label="Permalink to &quot;使用 jQuery 扩展&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;">(element).</span><span style="color:#B392F0;">ProgressCircle</span><span style="color:#E1E4E8;">(options);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">progressCircle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;">(element).</span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;zui.progressCircle&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre></div><h2 id="更新环形进度条" tabindex="-1">更新环形进度条 <a class="header-anchor" href="#更新环形进度条" aria-label="Permalink to &quot;更新环形进度条&quot;">​</a></h2><p>调用环形进度条组件实例上的 <code>render</code> 方法来更新实例, 并重新进行渲染:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">progressCircle.</span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">({options});</span></span></code></pre></div><h2 id="构造方法" tabindex="-1">构造方法 <a class="header-anchor" href="#构造方法" aria-label="Permalink to &quot;构造方法&quot;">​</a></h2><p><strong>定义：</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">constructor</span><span style="color:#E1E4E8;">(element: HTMLElement </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> string, options: ProgressCircleOptions);</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>element</code>: 指定用于创建环形进度条的容器元素, 或者通过字符串指定用于查找容易元素的选择器</li><li><code>options</code>: 指定选项</li></ul><p><strong>示例：</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> zui.</span><span style="color:#B392F0;">ProgressCircle</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#progress&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    percent: </span><span style="color:#79B8FF;">40</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre></div><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h2><h3 id="classname" tabindex="-1"><code>className</code> <a class="header-anchor" href="#classname" aria-label="Permalink to &quot;\`className\`&quot;">​</a></h3><p>类名。</p><ul><li>类型：<code>string | object | array</code></li><li>必选：否</li></ul><h3 id="circlesize" tabindex="-1"><code>circleSize</code> <a class="header-anchor" href="#circlesize" aria-label="Permalink to &quot;\`circleSize\`&quot;">​</a></h3><p>进度条控件整体大小。</p><ul><li>类型：<code>number</code></li><li>必选：否</li><li>默认值: 24</li></ul><h3 id="circlebordersize" tabindex="-1"><code>circleBorderSize</code> <a class="header-anchor" href="#circlebordersize" aria-label="Permalink to &quot;\`circleBorderSize\`&quot;">​</a></h3><p>进度条环宽度。</p><ul><li>类型：<code>number</code></li><li>必选：否</li><li>默认值: 2</li></ul><h3 id="circlebgcolor" tabindex="-1"><code>circleBgColor</code> <a class="header-anchor" href="#circlebgcolor" aria-label="Permalink to &quot;\`circleBgColor\`&quot;">​</a></h3><p>进度条环背景色。</p><ul><li>类型：<code>number</code></li><li>必选：否</li><li>默认值: <code>var(--progress-circle-bg)</code></li></ul><h3 id="circlecolor" tabindex="-1"><code>circleColor</code> <a class="header-anchor" href="#circlecolor" aria-label="Permalink to &quot;\`circleColor\`&quot;">​</a></h3><p>进度条环颜色。</p><ul><li>类型：<code>number</code></li><li>必选：否</li><li>默认值: <code>var(--progress-circle-bar-color)</code></li></ul><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="render" tabindex="-1"><code>render</code> <a class="header-anchor" href="#render" aria-label="Permalink to &quot;\`render\`&quot;">​</a></h3><p>重新渲染，可以指定新的选项。</p><p><strong>定义：</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(options: Partial</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">MenuOptions</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">): </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">;</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>options</code>：需要重新设置的选项</li></ul>`,43);function y(u,h,g,b,F,m){const a=e("Example");return o(),n("div",null,[i,r(a,null,{default:p(()=>[E]),_:1}),d])}const q=l(t,[["render",y]]);export{_ as __pageData,q as default};
