import{_ as f,r as v,o as T,c as w,a,w as l,g as o,b as s,d as c}from"./app.6d1258fa.js";let i=0;const D=[];function _(r){if(i&&(cancelAnimationFrame(i),i=0),r&&D.push(r),typeof window=="object"&&window.zui){D.forEach(e=>e()),D.length=0;return}i=requestAnimationFrame(()=>_())}const x=[{name:"id",title:"ID",width:60,fixed:"left",checkbox:!0},{name:"project",title:"项目名称",width:200,fixed:"left",type:"link",sortType:!1,nestedToggle:!0},{name:"manager",title:"负责人",width:60,sortType:!1,flex:1,type:"avatar",avatarKey:"managerAvatar",avatarWithName:!0,avatarClass:"size-xs circle"},{name:"progress",title:"进度",width:65,align:"center",sortType:!1,type:"circleProgress"},{name:"storyPoints",title:"需求规模",width:80,align:"right",sortType:!1,type:"format",format:{type:"html",format:r=>`${Number(r).toFixed(1)} <small class="text-gray">SP</small>`}},{name:"executionCounts",title:"执行数",width:70,align:"center",sortType:!1,type:"format",format:{type:"html",format:'{0} <small class="text-dark">迭代</small>'}},{name:"investedDays",title:"已投入",width:70,align:"center",sortType:!1,type:"format",format:{type:"html",format:'{0} <small class="text-dark">人天</small>'}},{name:"startDate",title:"开始日期",width:90,align:"center",sortType:!1,type:"format",format:{type:"datetime",format:"yyyy年MM月dd日"}},{name:"finishDate",title:"完成日期",width:90,align:"center",sortType:!1,type:"format",format:{type:"datetime",format:"yyyy年MM月dd日"}},{name:"actions",title:"操作",width:120,sortType:!1,fixed:"right",onRenderCell(r,{col:e,row:p}){return[{html:p.data[e.name].map(t=>`<a href="#action=${t}">${{start:"开始",close:"关闭",edit:"编辑"}[t]||t}</a>`).join(" ")}]}}],y=["禅道开源版","禅道企业版","禅道旗舰版","禅道移动端","禅道自动化测试社区","ZUI3","ZenDAS","渠成云原生应用交付平台","ZTF","ZenData","ZentaoPHP","喧喧","ZSite","ZDOO","ZenTools","ZenShot","ZenPanel","ZBox","MZUI"],F=["李强","张天明","孙小微","王萌","刘大辉","周红","李兰","金星","魏小娟","张亮","马广春","丁玉涛"],u=Date.now();function k(r){const e=Math.floor(Math.random()*F.length),p=r+1;return{id:`${p}`,project:`${y[r%y.length]}${Math.floor(r/y.length)||""}`,manager:F[e],managerAvatar:`../../../assets/avatar/avatar-${1+e%10}.png`,storyPoints:Math.floor(Math.random()*1e3),executionCounts:Math.floor(Math.random()*50),investedDays:Math.floor(Math.random()*60),startDate:new Date(u-Math.floor(Math.random()*100*(3600*1e3*24))).toLocaleDateString(),finishDate:new Date(u+Math.floor(Math.random()*100*(3600*1e3*24))).toLocaleDateString(),progress:Math.floor(Math.random()*100),actions:["start","edit","close"],parent:`${["","","",p-1,p-2,p-3,p-3,p-4,"",""][p%10]}`}}const h=Array(100).fill(0).map((r,e)=>k(e)),m={"dtable-advanced":{checkOnClickRow:!0,plugins:["checkable","nested","rich"],striped:!0,colHover:"header",bordered:!0,cols:{id:{sortType:"down",width:70},manager:{width:90,sortType:!0},executionCounts:{align:"right",sortType:!0},investedDays:{align:"right"},startDate:{width:120,sortType:!0},finishDate:{width:120,sortType:!0},actions:{type:"actionButtons",width:100,onRenderCell:null,actionBtnData:{start:{title:"开始",icon:"play"},close:{title:"关闭",icon:"off"},edit:{title:"编辑",icon:"pencil"}},style:{justifyContent:"center"}}}},"dtable-layout-size":{width:"auto",height:{min:200,max:300},data:5,cols:{manager:!1,storyPoints:!1,executionCounts:!1,startDate:!1,finishDate:!1,actions:!1}},"dtable-responsive":{height:"auto",data:5,responsive:!0,cols:{project:{fixed:!1,flex:1,width:"auto"},manager:!1,storyPoints:!1,executionCounts:!1,startDate:!1,finishDate:!1,actions:!1}},"dtable-flex":{height:"auto",data:5,cols:{project:{fixed:!1,flex:3,width:"auto"},investedDays:{flex:2,width:"auto"},progress:{flex:1,width:"auto"},manager:!1,storyPoints:!1,executionCounts:!1,startDate:!1,finishDate:!1,actions:!1}},"dtable-cols-fixed":{height:"auto",data:5,cols:{project:{fixed:!1,flex:3,minWidth:300},investedDays:{flex:2,width:"auto",minWidth:100},progress:{flex:1,width:"auto",minWidth:100},manager:!1,storyPoints:!1,executionCounts:!1,startDate:!1,finishDate:!1}},"dtable-header-height":{height:"auto",data:5,headerHeight:50},"dtable-header-hidden":{height:"auto",data:5,header:!1},"dtable-header-custom":{height:"auto",data:5},"dtable-row-height":{height:"auto",data:5,rowHeight:50},"dtable-sort-type":{height:"auto",data:5,cols:{id:{sortType:"up"},project:{fixed:!1,flex:3,width:"auto",sortType:!1},investedDays:{flex:2,width:"auto",sortType:!0},progress:{flex:1,width:"auto",sortType:!0},manager:!1,storyPoints:!1,executionCounts:!1,startDate:!1,finishDate:!1,actions:!1}},"dtable-hover-effection":{height:"auto",data:5,rowHover:!0,colHover:!0,cellHover:!0},"dtable-hover-effection-custom":{height:"auto",data:5,rowHover:!0,colHover:!0,cellHover:!0},"dtable-striped":{height:"auto",data:5,striped:!0},"dtable-striped-custom":"dtable-striped","dtable-bordered":{height:"auto",data:5,bordered:!0},"dtable-bordered-custom":"dtable-bordered","dtable-scrollbar":{scrollbarHover:!0,scrollbarSize:15,horzScrollbarPos:"inside",data:6,height:200},"dtable-scrollbar-custom":"dtable-scrollbar","dtable-cell-style":{height:"auto",data:5,cols:{id:{style:{color:"var(--color-danger-500)"}},project:{fixed:!1,flex:3,minWidth:300,cellStyle:{fontWeight:"bold",color:"var(--color-primary-500)"}},investedDays:!1,progress:{flex:1,width:"auto",minWidth:100},manager:!1,storyPoints:!1,executionCounts:!1,startDate:!1,finishDate:!1,actions:{align:"center",cellStyle:{justifyContent:"end"}}}},"dtable-checkable":{height:"auto",data:5,checkOnClickRow:!0,plugins:["checkable"]},"dtable-nested":{plugins:["nested"]},"dtable-render-cell":{cols:{actions:{onRenderCell(r,{col:e,rowData:p}){return[{html:p[e.name].map(t=>t==="start"?`<a href="#action=${t}" title="开始" class="btn square primary-pale size-sm"><i class="icon icon-play"></i></a>`:t==="edit"?`<a href="#action=${t}" title="编辑" class="btn square primary-pale size-sm"><i class="icon icon-pencil"></i></a>`:t==="close"?`<a href="#action=${t}" title="编辑" class="btn square primary-pale size-sm"><i class="icon icon-off"></i></a>`:`<a href="#action=${t}">${t}</a>`).join(" ")}]}}}}};function B(r){let e=m[r]||{};return typeof e=="string"&&(e=m[e]||{}),{height:400,striped:!1,...e,data:typeof e.data=="number"?h.slice(0,e.data):h,cols:x.map(p=>{if(e.cols){const t=e.cols[p.name];if(t)return{...p,...t};if(t===!1)return{...p,hidden:!0}}return p})}}let b=0;function g(){b&&cancelAnimationFrame(b),b=requestAnimationFrame(A)}function A(){const r=document.querySelectorAll('[id^="dtable-"]:not(.dtable)');let e=0;r.forEach(p=>{if(p.classList.contains("dtable-inited")){e++;return}if(!window.zui.browser.isElementVisible(p))return;const t=p.id,d=B(t),C=new window.zui.DTable(p,d);p.classList.add("dtable-inited"),console.log("> dtable inited",C),e++}),e===r.length&&document.removeEventListener("scroll",g)}const S={mounted(){_(A),document.addEventListener("scroll",g)}};const P=S,zs=JSON.parse('{"title":"数据表格","description":"","frontmatter":{},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[{"level":3,"title":"基本功能","slug":"基本功能","link":"#基本功能","children":[]},{"level":3,"title":"增强功能","slug":"增强功能","link":"#增强功能","children":[]}]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"内容","slug":"内容","link":"#内容","children":[{"level":3,"title":"定义列","slug":"定义列","link":"#定义列","children":[]},{"level":3,"title":"定义数据","slug":"定义数据","link":"#定义数据","children":[]},{"level":3,"title":"过滤","slug":"过滤","link":"#过滤","children":[]},{"level":3,"title":"排序","slug":"排序","link":"#排序","children":[]}]},{"level":2,"title":"布局","slug":"布局","link":"#布局","children":[{"level":3,"title":"宽和高","slug":"宽和高","link":"#宽和高","children":[]},{"level":3,"title":"响应式","slug":"响应式","link":"#响应式","children":[]},{"level":3,"title":"列宽","slug":"列宽","link":"#列宽","children":[]},{"level":3,"title":"固定两侧的列","slug":"固定两侧的列","link":"#固定两侧的列","children":[]},{"level":3,"title":"表头","slug":"表头","link":"#表头","children":[]},{"level":3,"title":"表尾","slug":"表尾","link":"#表尾","children":[]},{"level":3,"title":"行高","slug":"行高","link":"#行高","children":[]}]},{"level":2,"title":"外观","slug":"外观","link":"#外观","children":[{"level":3,"title":"排序标记","slug":"排序标记","link":"#排序标记","children":[]},{"level":3,"title":"鼠标悬停效果","slug":"鼠标悬停效果","link":"#鼠标悬停效果","children":[]},{"level":3,"title":"隔行变色","slug":"隔行变色","link":"#隔行变色","children":[]},{"level":3,"title":"完整边框","slug":"完整边框","link":"#完整边框","children":[]},{"level":3,"title":"滚动条","slug":"滚动条","link":"#滚动条","children":[]},{"level":3,"title":"单元格样式","slug":"单元格样式","link":"#单元格样式","children":[]}]},{"level":2,"title":"行选中交互","slug":"行选中交互","link":"#行选中交互","children":[]},{"level":2,"title":"多层级数据结构","slug":"多层级数据结构","link":"#多层级数据结构","children":[]},{"level":2,"title":"自定义渲染","slug":"自定义渲染","link":"#自定义渲染","children":[]},{"level":2,"title":"单元格类型","slug":"单元格类型","link":"#单元格类型","children":[]},{"level":2,"title":"动态行数据","slug":"动态行数据","link":"#动态行数据","children":[]},{"level":2,"title":"动态更新","slug":"动态更新","link":"#动态更新","children":[]},{"level":2,"title":"滚动位置控制","slug":"滚动位置控制","link":"#滚动位置控制","children":[]},{"level":2,"title":"插件机制","slug":"插件机制","link":"#插件机制","children":[]},{"level":2,"title":"CSS 变量","slug":"css-变量","link":"#css-变量","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":"初始化选项","slug":"初始化选项","link":"#初始化选项","children":[]},{"level":3,"title":"列定义","slug":"列定义","link":"#列定义","children":[]},{"level":3,"title":"行数据定义","slug":"行数据定义","link":"#行数据定义","children":[]},{"level":3,"title":"插件定义","slug":"插件定义","link":"#插件定义","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]}],"relativePath":"lib/components/dtable/index.md","lastUpdated":null}'),j=o('<h1 id="数据表格" tabindex="-1">数据表格 <a class="header-anchor" href="#数据表格" aria-hidden="true">#</a></h1><p>数据表格是一种展示二维数据的强大方式，相比较普通的表格（<code>&lt;table&gt;</code>）组件，提供了更多的交互形式，并且拥有插件机制方便定制复杂交互的界面。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><h3 id="基本功能" tabindex="-1">基本功能 <a class="header-anchor" href="#基本功能" aria-hidden="true">#</a></h3><p>下面的示例中展示了数据表格的基本功能，包括：</p><ul><li>在固定区域内展示数据，超出部分可以滚动查看；</li><li>滚动时固定两侧的列和表头；</li><li>根据设定的列宽显示列；</li><li>虚拟渲染（仅渲染用户能看到的单元格）；</li><li>根据列设置调整单元格对齐方式。</li></ul>',6),I=s("div",{id:"dtable-basic"},null,-1),E=s("h3",{id:"增强功能",tabindex:"-1"},[c("增强功能 "),s("a",{class:"header-anchor",href:"#增强功能","aria-hidden":"true"},"#")],-1),V=s("p",null,"下面的示例中展示了通过内置插件以及定制化选项实现的增强功能，包括：",-1),z=s("ul",null,[s("li",null,"在表头显示排序标记；"),s("li",null,"行选中交互；"),s("li",null,"多层级数据结构，支持展开折叠；"),s("li",null,"特殊交互和外观，包括：鼠标悬停效果、隔行变色、完整边框等；"),s("li",null,"丰富的单元格渲染格式，包括链接、头像、环形进度条，格式化文本和操作按钮等。")],-1),R=s("div",{id:"dtable-advanced"},null,-1),q=o(`<h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h2><p><strong>1. 引入</strong></p><p>在你的代码中引入数据表格组件：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> {DTable} </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;zui/dtable&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>2. 定义表格的列</strong></p><p>通过一个对象数组依次序定义数据表格中的所有列，每个对象定义一个列，通过对象上的 <code>name</code> 属性来区分不同的列。例如：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">cols</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;id&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;ID&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#A5D6FF;">&#39;down&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;project&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;项目名称&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;manager&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;负责人&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;storyPoints&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;需求规模&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">80</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;executionCounts&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;执行数&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">70</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;investedDays&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;已投入&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">70</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;startDate&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;开始日期&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">90</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;finishDate&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;完成日期&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">90</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;progress&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;进度&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">65</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    {name: </span><span style="color:#A5D6FF;">&#39;actions&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;操作&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;right&#39;</span><span style="color:#C9D1D9;">, onRenderCell: renderActions}, </span><span style="color:#8B949E;">// renderActions 为单元格自定义渲染方法</span></span>
<span class="line"><span style="color:#C9D1D9;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>列的定义所有可用属性参见 <a href="#%E5%88%97%E5%AE%9A%E4%B9%89">章节“列定义”</a>。</p><p><strong>3. 定义行数据</strong></p><p>通过一个对象数组定义表格的每行要进行展示的数据，数据使用一个对象定义，必须包含 <code>id</code> 属性用于区分，并且通常包含列定义中的所有列名属性。例如：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">data</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span></span>
<span class="line"><span style="color:#C9D1D9;">    {id: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, project: </span><span style="color:#A5D6FF;">&#39;禅道开源版&#39;</span><span style="color:#C9D1D9;">, manager: </span><span style="color:#A5D6FF;">&#39;李明&#39;</span><span style="color:#C9D1D9;">, storyPoints: </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">, executionCounts: </span><span style="color:#79C0FF;">42</span><span style="color:#C9D1D9;">, investedDays: </span><span style="color:#79C0FF;">32</span><span style="color:#C9D1D9;">, startDate: </span><span style="color:#A5D6FF;">&#39;2022-05-03&#39;</span><span style="color:#C9D1D9;">, finishDate: </span><span style="color:#A5D6FF;">&#39;2022-09-20&#39;</span><span style="color:#C9D1D9;">, progress: </span><span style="color:#79C0FF;">55</span><span style="color:#C9D1D9;">, actions: [</span><span style="color:#A5D6FF;">&#39;start&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;edit&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;close&#39;</span><span style="color:#C9D1D9;">]},</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>4. 定义用于展示数据表格的元素</strong></p><p>在页面上预先使用一个元素来展示数据表格，通常使用一个 <code>&lt;div&gt;</code>：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;myDtable&quot;</span><span style="color:#C9D1D9;">&gt;&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>5. 初始化数据表格组件</strong></p><p>创建一个 <code>zui.DTable</code> 实例来对数据表格组件进行初始化，初始化时需要依次指定用于展示数据表格的元素和初始化选项：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">dtable</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, options);</span></span>
<span class="line"><span style="color:#8B949E;">// dtable 为数据表格组件实例，后续可以调用相关方法</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整示例代码如下：</strong></p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">id</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;myDtable&quot;</span><span style="color:#C9D1D9;">&gt;&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#8B949E;">// 获取一个 div 用于初始化数据表格</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">element</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> document.</span><span style="color:#D2A8FF;">getElementById</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;myDtable&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// 定义一个方法用于渲染操作列单元格内的操作按钮</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">renderActions</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> (</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">rowID</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">col</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">rowData</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> [{</span></span>
<span class="line"><span style="color:#C9D1D9;">        html: rowData[col.name].</span><span style="color:#D2A8FF;">map</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">action</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">actionNames</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {start: </span><span style="color:#A5D6FF;">&#39;开始&#39;</span><span style="color:#C9D1D9;">, close: </span><span style="color:#A5D6FF;">&#39;关闭&#39;</span><span style="color:#C9D1D9;">, edit: </span><span style="color:#A5D6FF;">&#39;编辑&#39;</span><span style="color:#C9D1D9;">};</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`&lt;a href=&quot;#action=\${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">}&quot;&gt;\${</span><span style="color:#C9D1D9;">actionNames</span><span style="color:#A5D6FF;">[</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">] </span><span style="color:#FF7B72;">||</span><span style="color:#A5D6FF;"> </span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">}&lt;/a&gt;\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }).</span><span style="color:#D2A8FF;">join</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39; &#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    }];</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// 定义数据表格初始化选项</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">options</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    height: </span><span style="color:#79C0FF;">400</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    width: </span><span style="color:#A5D6FF;">&#39;100%&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;id&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;ID&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;project&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;项目名称&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;manager&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;负责人&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;storyPoints&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;需求规模&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">80</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;executionCounts&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;执行数&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">70</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;investedDays&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;已投入&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">70</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;startDate&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;开始日期&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">90</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;finishDate&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;完成日期&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">90</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;progress&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;进度&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">65</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;actions&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;操作&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;right&#39;</span><span style="color:#C9D1D9;">, onRenderCell: renderActions}, </span><span style="color:#8B949E;">// renderActions 为单元格自定义渲染方法</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        {id: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, project: </span><span style="color:#A5D6FF;">&#39;禅道开源版&#39;</span><span style="color:#C9D1D9;">, manager: </span><span style="color:#A5D6FF;">&#39;李明&#39;</span><span style="color:#C9D1D9;">, storyPoints: </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">, executionCounts: </span><span style="color:#79C0FF;">42</span><span style="color:#C9D1D9;">, investedDays: </span><span style="color:#79C0FF;">32</span><span style="color:#C9D1D9;">, startDate: </span><span style="color:#A5D6FF;">&#39;2022-05-03&#39;</span><span style="color:#C9D1D9;">, finishDate: </span><span style="color:#A5D6FF;">&#39;2022-09-20&#39;</span><span style="color:#C9D1D9;">, progress: </span><span style="color:#79C0FF;">55</span><span style="color:#C9D1D9;">, actions: [</span><span style="color:#A5D6FF;">&#39;start&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;edit&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;close&#39;</span><span style="color:#C9D1D9;">]},</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    striped: </span><span style="color:#79C0FF;">false</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// 初始化数据表格</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">dtable</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, options);</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-hidden="true">#</a></h2><h3 id="定义列" tabindex="-1">定义列 <a class="header-anchor" href="#定义列" aria-hidden="true">#</a></h3><p>[待定]</p><h3 id="定义数据" tabindex="-1">定义数据 <a class="header-anchor" href="#定义数据" aria-hidden="true">#</a></h3><p>[待定]</p><h3 id="过滤" tabindex="-1">过滤 <a class="header-anchor" href="#过滤" aria-hidden="true">#</a></h3><p>[待定]</p><h3 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-hidden="true">#</a></h3><p>[待定]</p><h2 id="布局" tabindex="-1">布局 <a class="header-anchor" href="#布局" aria-hidden="true">#</a></h2><h3 id="宽和高" tabindex="-1">宽和高 <a class="header-anchor" href="#宽和高" aria-hidden="true">#</a></h3><p>通常选项 <code>width</code> 和 <code>height</code> 选项来指定表格的总体宽和高，除了指定数字来使用固定尺寸还可以使用如下几个特殊值：</p><table><thead><tr><th>宽或高的特殊值</th><th>定义</th></tr></thead><tbody><tr><td><code>&#39;auto&#39;</code></td><td>当作为宽度时，数据表格最终宽度与所有列宽的宽度一致，但不会超过父级容器的宽度；当作为高度时，最终高度为表头、表尾和所有行的高度相加，此时数据表格不会出现垂直滚动条</td></tr><tr><td><code>&#39;100%&#39;</code></td><td>设置宽度或高度与父级容器的宽高一致</td></tr><tr><td><code>() =&gt; &#39;auto&#39; | number</code></td><td>指定一个函数来在每次渲染时动态返回值</td></tr><tr><td><code>{min: number, max: number}</code></td><td>仅高度可用，指定数据表格的最小和最大高度</td></tr></tbody></table><p>默认情况下宽度为 <code>&#39;100&#39;</code>，高度为 <code>&#39;auto&#39;</code>。</p><p>下面的示例中，表格的宽度为 <code>&#39;auto&#39;</code>，高度为 <code>{min: 200, max: 300}</code>。</p>`,34),N=s("div",{id:"dtable-layout-size"},null,-1),H=s("h3",{id:"响应式",tabindex:"-1"},[c("响应式 "),s("a",{class:"header-anchor",href:"#响应式","aria-hidden":"true"},"#")],-1),$=s("p",null,[c("通过选项 "),s("code",null,"responsive"),c(" 来让数据表格获得响应式特性：当数据表格所属的父级容器尺寸发生变化时，自动根据尺寸定义重新渲染。")],-1),M=s("div",{id:"dtable-responsive"},null,-1),W=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    responsive: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    width: </span><span style="color:#A5D6FF;">&#39;100%&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    height: </span><span style="color:#A5D6FF;">&#39;auto&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>当启用响应式特性时，确保宽度或高度使用了响应式的特殊值，例如 <code>&#39;100%&#39;</code> 或通过函数动态确定。</p></div><h3 id="列宽" tabindex="-1">列宽 <a class="header-anchor" href="#列宽" aria-hidden="true">#</a></h3><p>列宽通常在每一列的定义对象上进行定义，可以通过如下几个属性控制：</p><table><thead><tr><th>列定义</th><th>定义</th></tr></thead><tbody><tr><td><code>width</code></td><td>通过数值精确指定列的宽度</td></tr><tr><td><code>minWidth</code></td><td>指定列的最小宽度</td></tr><tr><td><code>maxWidth</code></td><td>指定列的最大宽度</td></tr><tr><td><code>flex</code></td><td>指定列的宽度弹性系数，当有列宽需要动态确定时，弹性系数用于决定当前列可以分得的宽度比例，弹性系数值为 <code>2</code> 的列宽度通常为弹性系数值为 <code>1</code> 列的两倍，当需要平分宽度时，可以将值全部设置为 <code>1</code></td></tr></tbody></table><p>除了单独指定每一列的宽度，还可以通过初始化选项全局指定默认的列宽属性：</p><table><thead><tr><th>选项名称</th><th>定义</th></tr></thead><tbody><tr><td><code>defaultColWidth</code></td><td>默认的列宽，当列定义没有指定时，使用此列宽</td></tr><tr><td><code>minColWidth</code></td><td>默认情况下列的最小宽度</td></tr><tr><td><code>maxColWidth</code></td><td>默认情况下列的最大宽度</td></tr></tbody></table>`,7),Z=s("div",{id:"dtable-flex"},null,-1),L=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    width: </span><span style="color:#A5D6FF;">&#39;100%&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    height: </span><span style="color:#A5D6FF;">&#39;auto&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;id&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;ID&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;project&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;项目名称&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;investedDays&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;已投入&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;progress&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;进度&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>当为数据表格启用响应式特性时或自适应的宽度值（例如 <code>&#39;100%&#39;</code>）时，确保所有没有固定在两侧的列中至少有一列启用了弹性宽度（指定了列定义上的 <code>flex</code> 属性），否则可能在所有指定的列宽度总和少于数据表格整体宽度的情况下右侧会出现空白区域。</p></div><h3 id="固定两侧的列" tabindex="-1">固定两侧的列 <a class="header-anchor" href="#固定两侧的列" aria-hidden="true">#</a></h3><p>通过为列定义设置 <code>fixed</code> 属性来将列固定显示，可选值包括 <code>&#39;left&#39;</code>（固定在左侧）和 <code>&#39;right&#39;</code> 固定在右侧。所有未被固定的列会在中间展示，当中间可用宽度不足时允许横向滚动查看。</p>`,4),O=s("div",{id:"dtable-cols-fixed"},null,-1),U=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    width: </span><span style="color:#A5D6FF;">&#39;100%&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    height: </span><span style="color:#A5D6FF;">&#39;auto&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;id&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;ID&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;project&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;项目名称&#39;</span><span style="color:#C9D1D9;">, minWidth: </span><span style="color:#79C0FF;">300</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;investedDays&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;已投入&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;progress&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;进度&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;actions&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;操作&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">120</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;right&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>应该避免将所有列都被设置为固定在两侧，否则当数据表格总体宽度大于所有固定的列时，中间部分会出现空白。</p></div><h3 id="表头" tabindex="-1">表头 <a class="header-anchor" href="#表头" aria-hidden="true">#</a></h3><p><strong>表头高度</strong></p><p>通过选项 <code>headerHeight</code> 来自定义表头高度，默认高度与行高 <code>rowHeight</code> 设置一致（行高默认值为 <code>35</code>）。</p>`,5),K=s("div",{id:"dtable-header-height"},null,-1),J=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    headerHeight: </span><span style="color:#79C0FF;">50</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>隐藏表头</strong></p><p>通过设置选项 <code>header</code> 为 <code>false</code> 来隐藏表头展示。</p>`,3),G=s("div",{id:"dtable-header-hidden"},null,-1),Q=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    header: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>自定义表头</strong></p><p>通过设置选项 <code>header</code> 为一个函数来动态返回表头内容。</p>`,3),X=c(" [例子待定] "),Y=s("p",null,[s("strong",null,"定制表头背景色")],-1),ss=s("p",null,[c("通过 CSS 变量 "),s("code",null,"--dtable-header-bg"),c(" 来设置表头背景色。")],-1),ns=s("div",{id:"dtable-header-custom"},null,-1),as=o(`<div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79C0FF;">#myDtable</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--dtable-header-bg</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">#ddeeff</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="表尾" tabindex="-1">表尾 <a class="header-anchor" href="#表尾" aria-hidden="true">#</a></h3><p>默认情况下表尾是不显示的，可以通过设置选项 <code>footer</code> 为一个函数来动态返回表尾内容；通过 <code>footerHeight</code> 来设置表尾高度。</p>`,3),ls=c(" [例子待定] "),es=s("h3",{id:"行高",tabindex:"-1"},[c("行高 "),s("a",{class:"header-anchor",href:"#行高","aria-hidden":"true"},"#")],-1),ps=s("p",null,[c("通过选项 "),s("code",null,"rowHeight"),c(" 来设置行高，默认高度为 "),s("code",null,"35"),c("。")],-1),os=s("div",{id:"dtable-row-height"},null,-1),ts=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rowHeight: </span><span style="color:#79C0FF;">50</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>为了提升在虚拟渲染时的效率，目前所有行高必须一致。可以通过插件机制实现动态行高。</p></div><h2 id="外观" tabindex="-1">外观 <a class="header-anchor" href="#外观" aria-hidden="true">#</a></h2><h3 id="排序标记" tabindex="-1">排序标记 <a class="header-anchor" href="#排序标记" aria-hidden="true">#</a></h3><p>在不启用插件的情况下，数据表格不支持对数据进行排序等交互，但支持根据列的设定在表头上显示排序标记。要启用排序标记可以通过列定义对象上的 <code>sortType</code> 属性来实现，可以使用如下值：</p><table><thead><tr><th><code>sortType</code> 值</th><th>定义</th></tr></thead><tbody><tr><td><code>false</code></td><td>不显示排序标记</td></tr><tr><td><code>true</code></td><td>显示排序标记，但此列尚未启用排序</td></tr><tr><td><code>up</code></td><td>显示按升序排序标记</td></tr><tr><td><code>down</code></td><td>显示降升序排序标记</td></tr></tbody></table>`,6),rs=s("div",{id:"dtable-sort-type"},null,-1),cs=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;id&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;ID&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#A5D6FF;">&#39;up&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;project&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;项目名称&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;investedDays&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;已投入&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;progress&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;进度&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="鼠标悬停效果" tabindex="-1">鼠标悬停效果 <a class="header-anchor" href="#鼠标悬停效果" aria-hidden="true">#</a></h3><p>数据表格支持通过选项分别对行、列和单元格启用鼠标悬停效果。相关选项如下：</p><table><thead><tr><th>选项</th><th>定义</th></tr></thead><tbody><tr><td><code>rowHover</code></td><td>如果设置为 <code>true</code>，则对鼠标下的整行启用鼠标悬停效果，默认为 <code>true</code></td></tr><tr><td><code>colHover</code></td><td>如果设置为 <code>true</code>，则对鼠标下的整列启用鼠标悬停效果，使用特殊值 <code>&#39;header&#39;</code> 可以让整列悬停效果仅在表头上触发，默认为 <code>false</code></td></tr><tr><td><code>cellHover</code></td><td>如果设置为 <code>true</code>，则对鼠标下的单元格启用鼠标悬停效果，默认为 <code>false</code></td></tr></tbody></table>`,4),is=s("div",{id:"dtable-hover-effection"},null,-1),ds=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rowHover: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    colHover: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cellHover: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>在启用列鼠标悬停效果时，如果希望单独去掉某一列的鼠标悬停效果，可以在此列定义对象上设置 <code>colHover</code> 属性为 <code>false</code>。</p></div><p><strong>定制鼠标悬停背景色</strong></p><p>通过 CSS 变量 <code>--dtable-hover-bg</code> 来设置鼠标悬停背景色。</p>`,4),Ds=s("div",{id:"dtable-hover-effection-custom"},null,-1),ys=o(`<div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79C0FF;">#myDtable</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--dtable-hover-bg</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">rgba</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">255</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">255</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">.1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="隔行变色" tabindex="-1">隔行变色 <a class="header-anchor" href="#隔行变色" aria-hidden="true">#</a></h3><p>通过设置选项 <code>striped</code> 为 <code>true</code> 来启用表格隔行变色效果。</p>`,3),bs=s("div",{id:"dtable-striped"},null,-1),Cs=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    striped: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>定制隔行背景色</strong></p><p>通过 CSS 变量 <code>--dtable-striped-bg</code> 来设置鼠标悬停背景色。</p>`,3),Fs=s("div",{id:"dtable-striped-custom"},null,-1),us=o(`<div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79C0FF;">#myDtable</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--dtable-striped-bg</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">#ddeeff</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="完整边框" tabindex="-1">完整边框 <a class="header-anchor" href="#完整边框" aria-hidden="true">#</a></h3><p>通过设置选项 <code>bordered</code> 为 <code>true</code> 来启用完整边框外观。</p>`,3),hs=s("div",{id:"dtable-bordered"},null,-1),ms=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    bordered: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>定制边框颜色</strong></p><p>通过 CSS 变量 <code>--dtable-border-color</code> 来设置边框颜色。</p>`,3),_s=s("div",{id:"dtable-bordered-custom"},null,-1),gs=o(`<div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79C0FF;">#myDtable</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--dtable-border-color</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">#333</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="滚动条" tabindex="-1">滚动条 <a class="header-anchor" href="#滚动条" aria-hidden="true">#</a></h3><p>数据表格在可用区域内无法显示完整内容时允许通过滚动条滚动查看。滚动条由<a href="/zui/3/js/ui/scrollbar/">自定义滚动条</a>组件实现。可以通过如下选项来设置滚动条外观：</p><table><thead><tr><th>选项</th><th>定义</th></tr></thead><tbody><tr><td><code>scrollbarHover</code></td><td>如果设置为 <code>true</code>，则只在鼠标悬停到表格区域时显示滚动条，否则只要有滚动条会固定显示，默认为 <code>true</code></td></tr><tr><td><code>scrollbarSize</code></td><td>设置滚动条的大小，决定水平滚动条的高度和垂直滚动条的宽度，默认为 <code>10</code></td></tr><tr><td><code>horzScrollbarPos</code></td><td>设置水平滚动条显示位置，可以为 <code>outside</code>（显示在表格底部外侧）和 <code>inside</code>（显示在表格底部内侧），默认为 <code>outside</code></td></tr></tbody></table>`,4),As=s("div",{id:"dtable-scrollbar"},null,-1),fs=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    scrollbarHover: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    scrollbarSize: </span><span style="color:#79C0FF;">15</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    horzScrollbarPos: </span><span style="color:#A5D6FF;">&#39;inside&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>设置滚动条样式</strong></p><p>可以通过设置 CSS 变量来个性化设置滚动条的外观，详情参见<a href="/zui/3/js/ui/scrollbar/">自定义滚动条</a>组件文档。</p>`,3),vs=s("div",{id:"dtable-scrollbar-custom"},null,-1),Ts=o(`<div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79C0FF;">#myDtable</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-opacity</span><span style="color:#C9D1D9;">:   </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-bg</span><span style="color:#C9D1D9;">:        </span><span style="color:#79C0FF;">var</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">--color-primary-400</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-shadow</span><span style="color:#C9D1D9;">:    </span><span style="color:#79C0FF;">inset</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">rgba</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">var</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">--color-inverse-rgb</span><span style="color:#C9D1D9;">), </span><span style="color:#79C0FF;">.05</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-bar-bg</span><span style="color:#C9D1D9;">:    </span><span style="color:#79C0FF;">var</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">--color-primary-900</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-hover-bg</span><span style="color:#C9D1D9;">:  </span><span style="color:#79C0FF;">var</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">--color-primary-800</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-drag-bg</span><span style="color:#C9D1D9;">:   </span><span style="color:#79C0FF;">var</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">--color-secondary-800</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-radius</span><span style="color:#C9D1D9;">:    </span><span style="color:#79C0FF;">9999</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">--scrollbar-duration</span><span style="color:#C9D1D9;">:  </span><span style="color:#79C0FF;">1</span><span style="color:#FF7B72;">s</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="单元格样式" tabindex="-1">单元格样式 <a class="header-anchor" href="#单元格样式" aria-hidden="true">#</a></h3><p>在列定义对象上允许通过如下属性设置单元格样式：</p><table><thead><tr><th>属性</th><th>定义</th></tr></thead><tbody><tr><td><code>align</code></td><td>设置该列上所有单元格的内容对齐方式，允许的值包括：<code>&#39;left&#39;</code>（左侧对齐）、 <code>&#39;center&#39;</code>（居中对齐） 和 <code>&#39;right&#39;</code>（右侧对齐）</td></tr><tr><td><code>style</code></td><td>通过一个 CSS 样式属性对象设置表头单元格的样式</td></tr><tr><td><code>cellStyle</code></td><td>通过一个 CSS 样式属性对象设置该列单元格的样式</td></tr></tbody></table>`,4),ws=s("div",{id:"dtable-cell-style"},null,-1),xs=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;id&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;ID&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#A5D6FF;">&#39;down&#39;</span><span style="color:#C9D1D9;">, style: {color: </span><span style="color:#A5D6FF;">&#39;var(--color-danger-500)&#39;</span><span style="color:#C9D1D9;">}},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;project&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;项目名称&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">, cellStyle: {fontWeight: </span><span style="color:#A5D6FF;">&#39;bold&#39;</span><span style="color:#C9D1D9;">, color: </span><span style="color:#A5D6FF;">&#39;var(--color-primary-500)&#39;</span><span style="color:#C9D1D9;">}},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;progress&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;进度&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;actions&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;操作&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, align: </span><span style="color:#A5D6FF;">&#39;center&#39;</span><span style="color:#C9D1D9;">, cellStyle: {justifyContent: </span><span style="color:#A5D6FF;">&#39;end&#39;</span><span style="color:#C9D1D9;">}},</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="行选中交互" tabindex="-1">行选中交互 <a class="header-anchor" href="#行选中交互" aria-hidden="true">#</a></h2><p>数据表格的行选中交互由内置插件 <code>checkable</code> 提供，要启用该插件需要通过选项 <code>plugins</code> 添加插件使用声明：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span><span style="color:#A5D6FF;">&#39;checkable&#39;</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>启用 <code>checkable</code> 插件之后，可以额外使用如下初始化选项：</p><table><thead><tr><th>选项</th><th>定义</th></tr></thead><tbody><tr><td><code>checkable</code></td><td>如果为 <code>true</code> 则启用行选中交互，默认为 <code>true</code></td></tr><tr><td><code>checkOnClickRow</code></td><td>如果为 <code>true</code> 则点击行时切换该行的选中状态，否则只能通过点击复选框实现切换</td></tr><tr><td><code>onCheckChange</code></td><td>指定一个回调函数在行选中状态变更时执行</td></tr></tbody></table><p>要为列添加切换选中复选框，可以在此列定义对象上设置 <code>checkbox</code> 属性为 <code>true</code>。</p>`,7),ks=s("div",{id:"dtable-checkable"},null,-1),Bs=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    plugins: [</span><span style="color:#A5D6FF;">&#39;checkable&#39;</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    checkOnClickRow: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;id&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;ID&#39;</span><span style="color:#C9D1D9;">, width: </span><span style="color:#79C0FF;">60</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#A5D6FF;">&#39;left&#39;</span><span style="color:#C9D1D9;">, sortType: </span><span style="color:#A5D6FF;">&#39;down&#39;</span><span style="color:#C9D1D9;">, checkbox: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">onCheckChange</span><span style="color:#C9D1D9;">: (</span><span style="color:#FFA657;">changes</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;选中状态变更&#39;</span><span style="color:#C9D1D9;">, changes);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="多层级数据结构" tabindex="-1">多层级数据结构 <a class="header-anchor" href="#多层级数据结构" aria-hidden="true">#</a></h2><p>多层级数据结构支持和交互实现由内置插件 <code>nested</code> 提供，要启用该插件需要通过选项 <code>plugins</code> 添加插件使用声明：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span><span style="color:#A5D6FF;">&#39;nested&#39;</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>启用 <code>nested</code> 插件之后，可以额外使用如下初始化选项：</p><table><thead><tr><th>选项</th><th>定义</th></tr></thead><tbody><tr><td><code>nested</code></td><td>如果为 <code>true</code> 则启用多层级数据结构支持，默认为 <code>true</code></td></tr><tr><td><code>nestedParentKey</code></td><td>设置行数据对象上用于标记当前行所属父级行 ID 的属性名，默认为 <code>&#39;parent&#39;</code></td></tr><tr><td><code>asParentKey</code></td><td>设置行数据对象上用于标记当前行为父级行的属性名，默认为 <code>&#39;asParent&#39;</code></td></tr><tr><td><code>nestedIndent</code></td><td>设置层级之间的缩进大小，默认为 <code>12</code></td></tr><tr><td><code>onRenderNestedToggle</code></td><td>设置渲染层级展开折叠切换按钮时的回调函数，可以通过此回调函数自定义渲染切换按钮</td></tr><tr><td><code>onNestedChange</code></td><td>指定一个回调函数在层级展开折叠状态变更时执行</td></tr></tbody></table><p>要为列添加折叠展开操作按钮和应用层级缩进，可以在此列定义对象上设置 <code>nestedToggle</code> 属性为 <code>true</code>。</p>`,7),Ss=s("div",{id:"dtable-nested"},null,-1),Ps=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    plugins: [</span><span style="color:#A5D6FF;">&#39;nested&#39;</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">        {name: </span><span style="color:#A5D6FF;">&#39;project&#39;</span><span style="color:#C9D1D9;">, title: </span><span style="color:#A5D6FF;">&#39;项目名称&#39;</span><span style="color:#C9D1D9;">, flex: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, fixed: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">, nestedToggle: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">},</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">onNestedChange</span><span style="color:#C9D1D9;">: (</span><span style="color:#FFA657;">changes</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;折叠展开状态变更了&#39;</span><span style="color:#C9D1D9;">, changes);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="自定义渲染" tabindex="-1">自定义渲染 <a class="header-anchor" href="#自定义渲染" aria-hidden="true">#</a></h2><p>数据表格支持如下选项来对行和单元格的渲染进行定制：</p><table><thead><tr><th>选项</th><th>定义</th></tr></thead><tbody><tr><td><code>onRenderCell</code></td><td>渲染每行上的单元格时的回调函数</td></tr><tr><td><code>onRenderHeaderCell</code></td><td>渲染表头上的单元格时的回调函数</td></tr><tr><td><code>onRenderRow</code></td><td>渲染每行时的回调函数</td></tr><tr><td><code>onRenderHeaderRow</code></td><td>渲染表头行时的回调函数</td></tr></tbody></table><p>以上选项的详细用法参见<a href="#%E9%80%89%E9%A1%B9">选项</a>章节。</p><p>针对每个特定的列，可以在列定义对象上通过如下属性自定义渲染：</p><table><thead><tr><th>属性</th><th>定义</th></tr></thead><tbody><tr><td><code>onRenderCell</code></td><td>渲染此列上的单元格时的回调函数</td></tr></tbody></table><p>下面的例子中通过 <code>onRenderCell</code> 对“操作”列上进行了自定渲染，以通过图标按钮的形式显示操作：</p>`,8),js=s("div",{id:"dtable-render-cell"},null,-1),Is=o(`<div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">(element, {</span></span>
<span class="line"><span style="color:#C9D1D9;">    cols: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    data: [</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">onRenderCell</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">_rowID</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">col</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">rowData</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (col.name </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;actions&#39;</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> [{</span></span>
<span class="line"><span style="color:#C9D1D9;">                html: rowData[col.name].</span><span style="color:#D2A8FF;">map</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">action</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">                    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (action </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;start&#39;</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">                        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`&lt;a href=&quot;#action=\${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">}&quot; title=&quot;开始&quot; class=&quot;btn square primary-pale size-sm&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/a&gt;\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">                    }</span></span>
<span class="line"><span style="color:#C9D1D9;">                    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (action </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;edit&#39;</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">                        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`&lt;a href=&quot;#action=\${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">}&quot; title=&quot;编辑&quot; class=&quot;btn square primary-pale size-sm&quot;&gt;&lt;i class=&quot;icon icon-pencil&quot;&gt;&lt;/i&gt;&lt;/a&gt;\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">                    }</span></span>
<span class="line"><span style="color:#C9D1D9;">                    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (action </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;close&#39;</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">                        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`&lt;a href=&quot;#action=\${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">}&quot; title=&quot;编辑&quot; class=&quot;btn square primary-pale size-sm&quot;&gt;&lt;i class=&quot;icon icon-off&quot;&gt;&lt;/i&gt;&lt;/a&gt;\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">                    }</span></span>
<span class="line"><span style="color:#C9D1D9;">                    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`&lt;a href=&quot;#action=\${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">}&quot;&gt;\${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">}&lt;/a&gt;\`</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">                }).</span><span style="color:#D2A8FF;">join</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39; &#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">            }];</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> result;</span></span>
<span class="line"><span style="color:#C9D1D9;">    },</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="单元格类型" tabindex="-1">单元格类型 <a class="header-anchor" href="#单元格类型" aria-hidden="true">#</a></h2><p>单元格类型需要在列定义对象通过 <code>type</code> 属性指定，不同的列可以设置为相同的类型，可以通过自定义渲染方式以及插件机制对特定类型的单元进行自定义。</p><p><strong>预置的单元格类型</strong></p><p>内置插件 <code>rich</code> 预置了一些单元格类型，通过指定类型可以为单元格应用丰富的格式，目前支持如下类型：</p><table><thead><tr><th>单元格类型</th><th>定义</th></tr></thead><tbody><tr><td><code>html</code></td><td>将单元格内容作为 HTML 渲染</td></tr><tr><td><code>format</code></td><td>将单元格内容通过预设格式化方式输出</td></tr><tr><td><code>link</code></td><td>将单元格内容渲染为可点击的链接</td></tr><tr><td><code>avatar</code></td><td>在单元格内显示用户头像</td></tr><tr><td><code>circleProgress</code></td><td>在单元格内显示为环形进度条</td></tr><tr><td><code>actionButtons</code></td><td>在单元格内显示操作按钮</td></tr><tr><td><code>label</code></td><td>将单元格内容显示为标签</td></tr></tbody></table><p>[示例待定]</p><h2 id="动态行数据" tabindex="-1">动态行数据 <a class="header-anchor" href="#动态行数据" aria-hidden="true">#</a></h2><p>动态行数据支持初始化时不给定行数据，只需要给定要显示的行术，在用户滚动到指定位置时动态给定需要显示的行的数据即可。</p><p>[示例待定]</p><h2 id="动态更新" tabindex="-1">动态更新 <a class="header-anchor" href="#动态更新" aria-hidden="true">#</a></h2><p>动态对数据表格中的数据进行更新。</p><p>[示例待定]</p><h2 id="滚动位置控制" tabindex="-1">滚动位置控制 <a class="header-anchor" href="#滚动位置控制" aria-hidden="true">#</a></h2><p>[示例待定]</p><h2 id="插件机制" tabindex="-1">插件机制 <a class="header-anchor" href="#插件机制" aria-hidden="true">#</a></h2><p>数据表格支持插件机制，通过插件可以对数据表格的功能进行增强，目前内置了如下插件：</p><table><thead><tr><th>插件名称</th><th>定义</th></tr></thead><tbody><tr><td><code>checkable</code></td><td>支持行选中</td></tr><tr><td><code>nested</code></td><td>支持层级数据结构</td></tr><tr><td><code>rich</code></td><td>支持预设单元格类型</td></tr></tbody></table><p>通过选项 <code>plugins</code> 来指定要启用的插件，例如：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> zui.</span><span style="color:#D2A8FF;">DTable</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">    plugins: [</span><span style="color:#A5D6FF;">&#39;checkable&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;nested&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;rich&#39;</span><span style="color:#C9D1D9;">]</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>可以通过 <code>zui.DTable.definePlugin(pluginSetting)</code> 方法来定义新的插件，参数 <code>pluginSetting</code> 为插件定义对象，详细定义参考<a href="#%E6%8F%92%E4%BB%B6%E5%AE%9A%E4%B9%89">插件定义</a>。</p><h2 id="css-变量" tabindex="-1">CSS 变量 <a class="header-anchor" href="#css-变量" aria-hidden="true">#</a></h2><table><thead><tr><th>变量</th><th>定义</th><th>默认值</th></tr></thead><tbody><tr><td><code>--dtable-striped-bg</code></td><td>隔行背景色</td><td><code>var(--color-gray-100)</code></td></tr><tr><td><code>--dtable-hover-bg</code></td><td>鼠标悬停背景色</td><td><code>rgba(var(--color-gray-500-rgb), .1)</code></td></tr><tr><td><code>--dtable-header-bg</code></td><td>表头背景色</td><td><code>var(--color-surface)</code></td></tr><tr><td><code>--dtable-border-color</code></td><td>边框颜色</td><td><code>var(--color-border)</code></td></tr><tr><td><code>--dtable-sorter-size</code></td><td>排序标记大小</td><td><code>0.3125rem</code></td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><h3 id="初始化选项" tabindex="-1">初始化选项 <a class="header-anchor" href="#初始化选项" aria-hidden="true">#</a></h3><h3 id="列定义" tabindex="-1">列定义 <a class="header-anchor" href="#列定义" aria-hidden="true">#</a></h3><h3 id="行数据定义" tabindex="-1">行数据定义 <a class="header-anchor" href="#行数据定义" aria-hidden="true">#</a></h3><h3 id="插件定义" tabindex="-1">插件定义 <a class="header-anchor" href="#插件定义" aria-hidden="true">#</a></h3><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-hidden="true">#</a></h3>`,29);function Es(r,e,p,t,d,C){const n=v("Example");return T(),w("div",null,[j,a(n,null,{default:l(()=>[I]),_:1}),E,V,z,a(n,null,{default:l(()=>[R]),_:1}),q,a(n,null,{default:l(()=>[N]),_:1}),H,$,a(n,null,{default:l(()=>[M]),_:1}),W,a(n,null,{default:l(()=>[Z]),_:1}),L,a(n,null,{default:l(()=>[O]),_:1}),U,a(n,null,{default:l(()=>[K]),_:1}),J,a(n,null,{default:l(()=>[G]),_:1}),Q,a(n,null,{default:l(()=>[X]),_:1}),Y,ss,a(n,null,{default:l(()=>[ns]),_:1}),as,a(n,null,{default:l(()=>[ls]),_:1}),es,ps,a(n,null,{default:l(()=>[os]),_:1}),ts,a(n,null,{default:l(()=>[rs]),_:1}),cs,a(n,null,{default:l(()=>[is]),_:1}),ds,a(n,null,{default:l(()=>[Ds]),_:1}),ys,a(n,null,{default:l(()=>[bs]),_:1}),Cs,a(n,null,{default:l(()=>[Fs]),_:1}),us,a(n,null,{default:l(()=>[hs]),_:1}),ms,a(n,null,{default:l(()=>[_s]),_:1}),gs,a(n,null,{default:l(()=>[As]),_:1}),fs,a(n,null,{default:l(()=>[vs]),_:1}),Ts,a(n,null,{default:l(()=>[ws]),_:1}),xs,a(n,null,{default:l(()=>[ks]),_:1}),Bs,a(n,null,{default:l(()=>[Ss]),_:1}),Ps,a(n,null,{default:l(()=>[js]),_:1}),Is])}const Rs=f(P,[["render",Es]]);export{zs as __pageData,Rs as default};
