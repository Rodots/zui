import{_ as r}from"./chunks/favicon.cc7c7df5.js";import{H as E,o as e,c as p,J as l,E as t,C as s,a as d,V as n,F as u,R as _,t as c}from"./chunks/framework.d553856c.js";const y=s("h1",{id:"浮动",tabindex:"-1"},[d("浮动 "),s("a",{class:"header-anchor",href:"#浮动","aria-label":'Permalink to "浮动"'},"​")],-1),h=s("p",null,"用于设置元素浮动或清除浮动影响的工具类。",-1),g={class:"table"},m=s("thead",null,[s("tr",null,[s("th",null,"工具类"),s("th",null,"属性")])],-1),f=n('<div class="tip custom-block"><p class="custom-block-title">提示</p><p>浮动应当仅适用于实现文字环绕效果，布局请使用 <code>flex</code> 等工具类。</p></div><h2 id="效果展示" tabindex="-1">效果展示 <a class="header-anchor" href="#效果展示" aria-label="Permalink to &quot;效果展示&quot;">​</a></h2><h3 id="向右浮动" tabindex="-1">向右浮动 <a class="header-anchor" href="#向右浮动" aria-label="Permalink to &quot;向右浮动&quot;">​</a></h3><p>使用工具类 <code>pull-right</code> 将一个元素浮动到其容器的右边。</p>',4),I=s("div",{class:"clearfix"},[s("img",{class:"pull-right ml-4 h-24",src:r}),s("p",null,"ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。")],-1),b=n(`<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;clearfix&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;pull-right ml-2 h-24&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;/favicon.svg&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="向左浮动" tabindex="-1">向左浮动 <a class="header-anchor" href="#向左浮动" aria-label="Permalink to &quot;向左浮动&quot;">​</a></h3><p>使用工具类 <code>pull-left</code> 将一个元素浮动到其容器的左边。</p>`,3),k=s("div",{class:"clearfix"},[s("img",{class:"pull-left mr-4 h-24",src:r}),s("p",null,"ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。")],-1),v=n(`<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;clearfix&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;pull-left mr-4 h-24&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;/favicon.svg&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;ZUI3 是一个开箱即用的组合式前端 UI 框架。ZUI3 组件库内置了大量组件，并支持集中开发、调试和打包，其中打包还支持只选择指定的组件进行个性化定制，同步输出组件库文档。但当需求扩展到组件库之外时，就需要用到扩展组件库了。ZUI3 支持扩展组件库模式，可以从其他位置引入一个或多个组件库目录，享受集中开发、调试和打包。下面介绍扩展组件库的使用方法。ZUI3 每个组件在一个独立的目录内，拥有自己的 package.json 文件，使得组件可以独立作为 npm 包来使用，也可以单独作为子项目进行开发维护。通常组件通过在 package.json 文件中设置属性 private: true 来让包仅在 zui3 工作空间内可用，但组件仍然拥有作为公开的包发布到 npm 上进行独立使用。&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div>`,1),Z=JSON.parse('{"title":"浮动","description":"","frontmatter":{},"headers":[],"relativePath":"utilities/layout/utilities/floats.md","filePath":"utilities/layout/utilities/floats.md","lastUpdated":null}'),U={name:"utilities/layout/utilities/floats.md"},B=Object.assign(U,{setup(F){const i=[{name:"pull-right",desc:"float: right;"},{name:"pull-left",desc:"float: left;"},{name:"clearfix",desc:'.clearfix::after {content: ""; display: block; clear: both;}'}];return(C,T)=>{const a=E("Example");return e(),p("div",null,[y,h,l(a,{class:"p-0"},{default:t(()=>[s("table",g,[m,s("tbody",null,[(e(),p(u,null,_(i,o=>s("tr",null,[s("td",null,c(o.name),1),s("td",null,[s("code",null,c(o.desc),1)])])),64))])])]),_:1}),f,l(a,{background:"light-grid"},{default:t(()=>[I]),_:1}),b,l(a,{background:"light-grid"},{default:t(()=>[k]),_:1}),v])}}});export{Z as __pageData,B as default};
